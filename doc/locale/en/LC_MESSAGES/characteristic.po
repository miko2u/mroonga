# English translations for Mroonga package.
# Copyright (C) 2009-2014, Mroonga Project
# This file is distributed under the same license as the Mroonga package.
# Kouhei Sutou <kou@clear-code.com>, 2014.
#
msgid ""
msgstr ""
"Project-Id-Version: Mroonga 4.03\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-05-30 13:00+0900\n"
"PO-Revision-Date: 2014-05-30 13:00+0900\n"
"Last-Translator: Kouhei Sutou <kou@clear-code.com>\n"
"Language-Team: English\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: en\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

msgid "The characteristics of Mroonga"
msgstr "The characteristics of Mroonga"

msgid "What is Mroonga?"
msgstr "What is Mroonga?"

msgid ""
"Mroonga is a MySQL storage engine based on Groonga, the full text search "
"engine."
msgstr ""
"Mroonga is a MySQL storage engine based on Groonga, the full text search "
"engine."

msgid ""
"In MySQL 5.1 or later, Pluggable Storage Engine interface is introduced, and "
"we can use custom storage engines easily. So we implement Mroonga, so that "
"we can use Groonga through MySQL."
msgstr ""
"In MySQL 5.1 or later, Pluggable Storage Engine interface is introduced, and "
"we can use custom storage engines easily. So we implement Mroonga, so that "
"we can use Groonga through MySQL."

msgid "By using Mroonga, you can use Groonga with SQL."
msgstr "By using Mroonga, you can use Groonga with SQL."

msgid "The successor of Tritonn"
msgstr "The successor of Tritonn"

msgid ""
"To support Japanese full text search, Tritonn was developed by embedding "
"Senna, the predecessor of Groonga, in MySQL. Mroogna is its successor."
msgstr ""
"To support Japanese full text search, Tritonn was developed by embedding "
"Senna, the predecessor of Groonga, in MySQL. Mroogna is its successor."

msgid "Running as a MySQL plugin"
msgstr "Running as a MySQL plugin"

msgid ""
"Since Tritonn was the modified version of MySQL, we need to build it by "
"ourselves or use binary files provided by Tritonn project, thus we cannot "
"use the official binary files provided by MySQL."
msgstr ""
"Since Tritonn was the modified version of MySQL, we need to build it by "
"ourselves or use binary files provided by Tritonn project, thus we cannot "
"use the official binary files provided by MySQL."

msgid ""
"On the other hand, Mroonga is an independent program (shared library) using "
"Pluggable Storage Engine interface, and we can dynamically load it on "
"MySQL's official binary. So we can use it more easily than Tritonn."
msgstr ""
"On the other hand, Mroonga is an independent program (shared library) using "
"Pluggable Storage Engine interface, and we can dynamically load it on "
"MySQL's official binary. So we can use it more easily than Tritonn."

msgid "Faster index update"
msgstr "Faster index update"

msgid ""
"Comparing to Senna, Groonga has much better throughput in adding or updating "
"index."
msgstr ""
"Comparing to Senna, Groonga has much better throughput in adding or updating "
"index."

msgid "Mroonga also has the benefit of this performance improvement."
msgstr "Mroonga also has the benefit of this performance improvement."

msgid "Faster search"
msgstr "Faster search"

msgid ""
"In Tritonn, we use MyISAM storage engine, thus we have a exclusive table "
"lock by updating data (and index), and it prevents the performance of search."
msgstr ""
"In Tritonn, we use MyISAM storage engine, thus we have a exclusive table "
"lock by updating data (and index), and it prevents the performance of search."

msgid ""
"But in Mroonga, we no longer have this issue, and the performance of search "
"is better especially in frequent data update cases."
msgstr ""
"But in Mroonga, we no longer have this issue, and the performance of search "
"is better especially in frequent data update cases."

msgid "Geolocation search"
msgstr "Geolocation search"

msgid ""
"Groonga supports not only the full text search, but also the fast "
"geolocation search using index. And MySQL also has the syntax for "
"geolocation search. With Mroonga, you can use Groonga's fast geolocation "
"search by using MySQL's geolocation SQL syntax."
msgstr ""
"Groonga supports not only the full text search, but also the fast "
"geolocation search using index. And MySQL also has the syntax for "
"geolocation search. With Mroonga, you can use Groonga's fast geolocation "
"search by using MySQL's geolocation SQL syntax."

msgid "Sharing the same Groonga storage"
msgstr "Sharing the same Groonga storage"

msgid ""
"Mroonga stores the data by using Groonga's DB API. And its storage file's "
"format is same as that of the file that is managed by Groonga itself only. "
"Therefore you can share the same Groonga storage like below."
msgstr ""
"Mroonga stores the data by using Groonga's DB API. And its storage file's "
"format is same as that of the file that is managed by Groonga itself only. "
"Therefore you can share the same Groonga storage like below."

msgid "Store data through Mroonga (MySQL) and search from Groonga server."
msgstr "Store data through Mroonga (MySQL) and search from Groonga server."

msgid "Store data through Groonga server and search from Mroonga (MySQL)."
msgstr "Store data through Groonga server and search from Mroonga (MySQL)."

msgid ""
"And Groonga's storage file can be shared with multi-processes and multi-"
"threads, so that we can invoke several search queries to the same storage "
"file simultaneously."
msgstr ""
"And Groonga's storage file can be shared with multi-processes and multi-"
"threads, so that we can invoke several search queries to the same storage "
"file simultaneously."

msgid "Associate with other storage engines"
msgstr "Associate with other storage engines"

msgid "Mroonga has two running modes."
msgstr "Mroonga has two running modes."

msgid ""
"One is \"storage mode\", that is the default mode, and we use Groonga for "
"both storing data and searching. With this mode, you can have full benefits "
"of Groonga described above, like fast data update, lock-free full text "
"search and geolocation search. But it does not support transactions."
msgstr ""
"One is \"storage mode\", that is the default mode, and we use Groonga for "
"both storing data and searching. With this mode, you can have full benefits "
"of Groonga described above, like fast data update, lock-free full text "
"search and geolocation search. But it does not support transactions."

msgid ""
"Another one is \"wrapper mode\", that adds full text search function on "
"other storage engines like MyISAM or InnoDB. With this mode, you can use "
"Groonga's fast full text search with having the benefits of the storage "
"engine, ex. transaction in InnoDB. But you cannot have benefits from "
"Groonga's read-lock free characteristic. And you might have the performance "
"bottle neck in the storage engine in updating data."
msgstr ""
"Another one is \"wrapper mode\", that adds full text search function on "
"other storage engines like MyISAM or InnoDB. With this mode, you can use "
"Groonga's fast full text search with having the benefits of the storage "
"engine, ex. transaction in InnoDB. But you cannot have benefits from "
"Groonga's read-lock free characteristic. And you might have the performance "
"bottle neck in the storage engine in updating data."

msgid "Supported platforms"
msgstr "Supported platforms"

msgid "We currently support the following platforms."
msgstr "We currently support the following platforms."

msgid "Linux x86_64 (Intel64/AMD64)"
msgstr "Linux x86_64 (Intel64/AMD64)"
